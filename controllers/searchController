const Search = require('../models/Search');

const UNSPLASH_API_KEY = process.env.IMAGE_API_KEY;

exports.handleSearch = async (req, res) => {
  const query = req.params.query;
  const page = parseInt(req.query.page) || 1;

  if (!query) return res.status(400).json({ error: 'Missing search query.' });

  try {
    await Search.create({ term: query });
  } catch (err) {
    console.error('Failed to save search term:', err.message);
  }

  try {
    const response = await fetch(`https://api.unsplash.com/search/photos?query=${encodeURIComponent(query)}&page=${page}&per_page=10`, {
      headers: {
        Authorization: `Client-ID ${UNSPLASH_API_KEY}`
      }
    });

    const data = await response.json();

    if (!data.results) {
      return res.status(500).json({ error: 'Error fetching from Unsplash API.' });
    }

    const results = data.results.map(photo => ({
      imageUrl: photo.urls?.regular,
      description: photo.alt_description || 'No description',
      pageUrl: photo.links?.html
    }));

    res.json(results);
  } catch (err) {
    console.error('Error fetching from Unsplash:', err.message);
    res.status(500).json({ error: 'Internal server error.' });
  }
};

exports.getRecentSearches = async (req, res) => {
  try {
    const recent = await Search.find({})
      .sort({ when: -1 })
      .limit(10)
      .select({ term: 1, when: 1, _id: 0 });

    res.json(recent);
  } catch (err) {
    console.error('Error fetching recent searches:', err.message);
    res.status(500).json({ error: 'Could not retrieve recent searches.' });
  }
};